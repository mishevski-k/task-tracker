name: C++ Release

on:
  push:
    tags:
      - '*'  # Also triggers on any tag push, including from dev or other branches

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Build with CMake (Linux)
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .

      - name: Create Release Artifact (Linux)
        run: |
          mkdir release
          cp build/task-cli release/  # The task-cli executable

      - name: Upload Artifact (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: release-linux
          path: release/task-cli

  build-mac:
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Build with CMake (macOS)
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .

      - name: Create Release Artifact (macOS)
        run: |
          mkdir release
          cp build/task-cli release/  # The task-cli executable

      - name: Upload Artifact (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: release-mac
          path: release/task-cli

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Build with CMake (Windows)
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 17 2022" ..
          cmake --build . --config Release

      - name: Create Release Artifact (Windows)
        run: |
          mkdir release
          cp build/Release/task-cli.exe release/  # The task-cli executable for Windows

      - name: Upload Artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          path: release/task-cli.exe

  create-release:
    needs: [build-linux, build-mac, build-windows]  # Wait for all platforms to complete
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Version
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")  # Get the latest git tag or fallback to v0.1.0
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Set the version as an environment variable

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create ZIP Archives
        run: |
          cd artifacts/release-linux && zip -r ../../task-cli-linux.zip task-cli && cd -
          cd artifacts/release-mac && zip -r ../../task-cli-mac.zip task-cli && cd -
          cd artifacts/release-windows && zip -r ../../task-cli-windows.zip task-cli.exe && cd -


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            task-cli-linux.zip
            task-cli-mac.zip
            task-cli-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
